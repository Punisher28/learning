
lib.footer_menu = COA
lib.footer_menu {
    10 = HMENU
    10 {
        entryLevel = 0
        1 = TMENU
        1 {
            expAll = 1
            wrap = <ul>|</ul>
            NO {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li>|</li>
            }
        }
        2 < .1
        2 {
            wrap = <ul>|</ul>
            ACT {
                wrapItemAndSub = <li>|</li>
            }
        }
        3 < .1
        3 {
           wrap = <ul>|</ul>
           ACT {
               wrapItemAndSub = <li>|</li>
            }
         }
    }
}


lib.header_menu = COA
lib.header_menu {
    10 = HMENU
    10 {
        wrap = <div class="menu_header menu_ul">|</div>
        entryLevel = 0
        1 = TMENU
        1 {
            expAll = 1
            noBlur = 1
            wrap = <ul>|</ul>
            target = _top
            NO {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li>|</li>
                allWrap = <div class="menu_header_no">|</div>
            }
            ACT < .NO
            ACT = 1
            ACT {
                allWrap = <div class="menu_header_act">|</div>
            }
            IFSUB < .NO
            IFSUB = 1
            IFSUB {
                allWrap = <div class="menu_header_ifsub">|</div>
            }
            ACTIFSUB < .IFSUB
            ACTIFSUB = 1
            ACTIFSUB {
                allWrap = <div class="menu_header_actifsub">|</div>
            }
        }
        2 = TMENU
        2 {
            noBlur = 1
            wrap = <ul class="menu_sub">|</ul>
            target = _top
            NO {
                stdWrap.htmlSpecialChars = 1
                wrapItemAndSub = <li>|</li>
                allWrap = <div class="menu_sub_no">|</div>
            }
            CUR < .NO
            CUR = 1
            CUR {
                allWrap = <div class="menu_sub_act">|</div>
            }
            ACT < .CUR
            ACT = 1
        }
    }
}

lib.breadcrumb=COA
lib.breadcrumb {
    10 = HMENU
    10 {
        special = rootline
        includeNotInMenu = 1
        1 = TMENU
        1 {
            noBlur = 1
            wrap = <ol class="breadcrumb"> | </ol>
            NO {
                linkWrap = <li class="breadcrumb-item">|</li>
            }
            CUR < .NO
            CUR = 1
            CUR {
                linkWrap = <li class="breadcrumb-item active" aria-current="page">|</li>
                doNotLinkIt = 1
            }
        }
    }
}

lib.content_menu = COA
lib.content_menu {
    10 = HMENU
    10 {
        wrap = <div class="menu_left menu_ul">|</div>
        entryLevel = 0
        1 = TMENU
        1 {
            wrap = <div class="menu_1"><ul>|</ul></div>
            target = _top
            NO {
                wrapItemAndSub = <li>|</li>|*|<li>|</li>|*|<li class="last">|</li>
            }
            ACT < .NO
            ACT = 1
            CUR < .NO
            CUR = 1
            CUR {
                allWrap = <div class="menu_act">|</div>
            }
        }
        2 = TMENU
        2 {
            expAll = 0
            wrap = <div class="menu_2"><ul>|</ul></div>
            target = _top
            NO {
                wrapItemAndSub = <li>|</li>
            }
            ACT < .NO
            ACT = 1
            CUR < .NO
            CUR = 1
            CUR {
                allWrap = <div class="menu_act">|</div>
            }
        }
        3 = TMENU
        3 {
            expAll = 1
            wrap = <div class="menu_3"><ul>|</ul></div>
            target = _top
            NO {
                wrapItemAndSub = <li>|</li>
            }
            ACT < .NO
            ACT = 1
            CUR < .NO
            CUR = 1
            CUR {
                allWrap = <div class="menu_act">|</div>
            }
        }
    }
}
lib.language = COA
lib.language {
    20 = HMENU
    20 {
        special = language
        special.value = 0,1,2
        special.normalWhenNoLanguage = 0
        wrap =
        1 = TMENU
        1 {
            noBlur = 1
            NO = 1
            NO {
                doNotLinkIt = 1
                linkWrap = <a> |</a>
                stdWrap.override = English||Ukraine
                stdWrap {
                    typolink {
                        parameter.data = page:uid
                        additionalParams = &L=0 || &L=1 || &L=2
                        ATagParams = hreflang="en-GB" || hreflang="ua-UA"
                        addQueryString = 1
                        addQueryString.exclude = L,id,no_cache
                        addQueryString.method = GET
                        no_cache = 0
                    }
                }
            }

        }
    }
    wrap = <div id="language_menu" class="language-menu">|</div>
}
#lib.gridelements.defaultGridSetup =< lib.contentElement
#lib.gridelements.defaultGridSetup {
#    templateName.field = tx_gridelements_backend_layout
#    templateName.ifEmpty = GridElement
#    layoutRootPaths {
#        1 = EXT:gridelements/Resources/Private/Layouts/
#    }
#    partialRootPaths {
#        1 = EXT:gridelements/Resources/Private/Partials/
#    }
#    templateRootPaths {
#        1 = EXT:gridelements/Resources/Private/Templates/
#    }
#    dataProcessing {
#        10 = GridElementsTeam\Gridelements\DataProcessing\GridChildrenProcessor
#        10 {
#            default {
#                as = children
#                # Default options of the grid children processor
#                # Change them according to the needs of your layout
#                # Read more about it in the TypoScript section of the manual
#                # options {
#                # sortingDirection = ASC
#                # sortingField = sorting
#                # recursive = 0
#                # resolveFlexFormData = 1
#                # resolveBackendLayout = 1
#                # respectColumns = 1
#                # respectRows = 1
#                # }
#            }
#        }
#    }
#}